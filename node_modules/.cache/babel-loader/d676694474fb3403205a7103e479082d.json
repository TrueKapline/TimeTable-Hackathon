{"ast":null,"code":"import React from\"react\";var GlobalContext=/*#__PURE__*/React.createContext({monthIndex:0,setMonthIndex:function setMonthIndex(index){},smallCalendarMonth:0,setSmallCalendarMonth:function setSmallCalendarMonth(index){},daySelected:null,setDaySelected:function setDaySelected(day){},showEventModal:false,setShowEventModal:function setShowEventModal(){},dispatchCalEvent:function dispatchCalEvent(_ref){var type=_ref.type,payload=_ref.payload;},savedEvents:[],selectedEvent:null,setSelectedEvent:function setSelectedEvent(){},setLabels:function setLabels(){},labels:[],updateLabel:function updateLabel(){},filteredEvents:[]});export default GlobalContext;","map":{"version":3,"sources":["D:/Program/xampp/htdocs/google-calendar-clone/src/context/GlobalContext.js"],"names":["React","GlobalContext","createContext","monthIndex","setMonthIndex","index","smallCalendarMonth","setSmallCalendarMonth","daySelected","setDaySelected","day","showEventModal","setShowEventModal","dispatchCalEvent","type","payload","savedEvents","selectedEvent","setSelectedEvent","setLabels","labels","updateLabel","filteredEvents"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,GAAMC,CAAAA,aAAa,cAAGD,KAAK,CAACE,aAAN,CAAoB,CACxCC,UAAU,CAAE,CAD4B,CAExCC,aAAa,CAAE,uBAACC,KAAD,CAAW,CAAE,CAFY,CAGxCC,kBAAkB,CAAE,CAHoB,CAIxCC,qBAAqB,CAAE,+BAACF,KAAD,CAAW,CAAE,CAJI,CAKxCG,WAAW,CAAE,IAL2B,CAMxCC,cAAc,CAAE,wBAACC,GAAD,CAAS,CAAE,CANa,CAOxCC,cAAc,CAAE,KAPwB,CAQxCC,iBAAiB,CAAE,4BAAM,CAAE,CARa,CASxCC,gBAAgB,CAAE,+BAAuB,IAApBC,CAAAA,IAAoB,MAApBA,IAAoB,CAAdC,OAAc,MAAdA,OAAc,CAAE,CATH,CAUxCC,WAAW,CAAE,EAV2B,CAWxCC,aAAa,CAAE,IAXyB,CAYxCC,gBAAgB,CAAE,2BAAM,CAAE,CAZc,CAaxCC,SAAS,CAAE,oBAAM,CAAE,CAbqB,CAcxCC,MAAM,CAAE,EAdgC,CAexCC,WAAW,CAAE,sBAAM,CAAE,CAfmB,CAgBxCC,cAAc,CAAE,EAhBwB,CAApB,CAAtB,CAmBA,cAAerB,CAAAA,aAAf","sourcesContent":["import React from \"react\";\r\n\r\nconst GlobalContext = React.createContext({\r\n  monthIndex: 0,\r\n  setMonthIndex: (index) => {},\r\n  smallCalendarMonth: 0,\r\n  setSmallCalendarMonth: (index) => {},\r\n  daySelected: null,\r\n  setDaySelected: (day) => {},\r\n  showEventModal: false,\r\n  setShowEventModal: () => {},\r\n  dispatchCalEvent: ({ type, payload }) => {},\r\n  savedEvents: [],\r\n  selectedEvent: null,\r\n  setSelectedEvent: () => {},\r\n  setLabels: () => {},\r\n  labels: [],\r\n  updateLabel: () => {},\r\n  filteredEvents: [],\r\n});\r\n\r\nexport default GlobalContext;\r\n"]},"metadata":{},"sourceType":"module"}