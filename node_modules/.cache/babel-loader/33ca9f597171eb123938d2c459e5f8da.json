{"ast":null,"code":"import _slicedToArray from\"D:/Program/xampp/htdocs/google-calendar-clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _toConsumableArray from\"D:/Program/xampp/htdocs/google-calendar-clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import React,{useState,useEffect,useReducer,useMemo}from\"react\";import GlobalContext from\"./GlobalContext\";import dayjs from\"dayjs\";import{jsx as _jsx}from\"react/jsx-runtime\";function savedEventsReducer(state,_ref){var type=_ref.type,payload=_ref.payload;switch(type){case\"push\":return[].concat(_toConsumableArray(state),[payload]);case\"update\":return state.map(function(evt){return evt.id===payload.id?payload:evt;});case\"delete\":return state.filter(function(evt){return evt.id!==payload.id;});default:throw new Error();}}function initEvents(){var storageEvents=localStorage.getItem(\"savedEvents\");var parsedEvents=storageEvents?JSON.parse(storageEvents):[];return parsedEvents;}export default function ContextWrapper(props){var _useState=useState(dayjs().month()),_useState2=_slicedToArray(_useState,2),monthIndex=_useState2[0],setMonthIndex=_useState2[1];var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),smallCalendarMonth=_useState4[0],setSmallCalendarMonth=_useState4[1];var _useState5=useState(dayjs()),_useState6=_slicedToArray(_useState5,2),daySelected=_useState6[0],setDaySelected=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),showEventModal=_useState8[0],setShowEventModal=_useState8[1];var _useState9=useState(null),_useState10=_slicedToArray(_useState9,2),selectedEvent=_useState10[0],setSelectedEvent=_useState10[1];var _useState11=useState([]),_useState12=_slicedToArray(_useState11,2),labels=_useState12[0],setLabels=_useState12[1];var _useReducer=useReducer(savedEventsReducer,[],initEvents),_useReducer2=_slicedToArray(_useReducer,2),savedEvents=_useReducer2[0],dispatchCalEvent=_useReducer2[1];var filteredEvents=useMemo(function(){return savedEvents.filter(function(evt){return labels.filter(function(lbl){return lbl.checked;}).map(function(lbl){return lbl.label;}).includes(evt.label);});},[savedEvents,labels]);useEffect(function(){localStorage.setItem(\"savedEvents\",JSON.stringify(savedEvents));},[savedEvents]);useEffect(function(){setLabels(function(prevLabels){return _toConsumableArray(new Set(savedEvents.map(function(evt){return evt.label;}))).map(function(label){var currentLabel=prevLabels.find(function(lbl){return lbl.label===label;});return{label:label,checked:currentLabel?currentLabel.checked:true};});});},[savedEvents]);useEffect(function(){if(smallCalendarMonth!==null){setMonthIndex(smallCalendarMonth);}},[smallCalendarMonth]);useEffect(function(){if(!showEventModal){setSelectedEvent(null);}},[showEventModal]);function updateLabel(label){setLabels(labels.map(function(lbl){return lbl.label===label.label?label:lbl;}));}return/*#__PURE__*/_jsx(GlobalContext.Provider,{value:{monthIndex:monthIndex,setMonthIndex:setMonthIndex,smallCalendarMonth:smallCalendarMonth,setSmallCalendarMonth:setSmallCalendarMonth,daySelected:daySelected,setDaySelected:setDaySelected,showEventModal:showEventModal,setShowEventModal:setShowEventModal,dispatchCalEvent:dispatchCalEvent,selectedEvent:selectedEvent,setSelectedEvent:setSelectedEvent,savedEvents:savedEvents,setLabels:setLabels,labels:labels,updateLabel:updateLabel,filteredEvents:filteredEvents},children:props.children});}","map":{"version":3,"sources":["D:/Program/xampp/htdocs/google-calendar-clone/src/context/ContextWrapper.js"],"names":["React","useState","useEffect","useReducer","useMemo","GlobalContext","dayjs","savedEventsReducer","state","type","payload","map","evt","id","filter","Error","initEvents","storageEvents","localStorage","getItem","parsedEvents","JSON","parse","ContextWrapper","props","month","monthIndex","setMonthIndex","smallCalendarMonth","setSmallCalendarMonth","daySelected","setDaySelected","showEventModal","setShowEventModal","selectedEvent","setSelectedEvent","labels","setLabels","savedEvents","dispatchCalEvent","filteredEvents","lbl","checked","label","includes","setItem","stringify","prevLabels","Set","currentLabel","find","updateLabel","children"],"mappings":"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","sourcesContent":["import React, {\r\n  useState,\r\n  useEffect,\r\n  useReducer,\r\n  useMemo,\r\n} from \"react\";\r\nimport GlobalContext from \"./GlobalContext\";\r\nimport dayjs from \"dayjs\";\r\n\r\nfunction savedEventsReducer(state, { type, payload }) {\r\n  switch (type) {\r\n    case \"push\":\r\n      return [...state, payload];\r\n    case \"update\":\r\n      return state.map((evt) =>\r\n        evt.id === payload.id ? payload : evt\r\n      );\r\n    case \"delete\":\r\n      return state.filter((evt) => evt.id !== payload.id);\r\n    default:\r\n      throw new Error();\r\n  }\r\n}\r\nfunction initEvents() {\r\n  const storageEvents = localStorage.getItem(\"savedEvents\");\r\n  const parsedEvents = storageEvents ? JSON.parse(storageEvents) : [];\r\n  return parsedEvents;\r\n}\r\n\r\nexport default function ContextWrapper(props) {\r\n  const [monthIndex, setMonthIndex] = useState(dayjs().month());\r\n  const [smallCalendarMonth, setSmallCalendarMonth] = useState(null);\r\n  const [daySelected, setDaySelected] = useState(dayjs());\r\n  const [showEventModal, setShowEventModal] = useState(false);\r\n  const [selectedEvent, setSelectedEvent] = useState(null);\r\n  const [labels, setLabels] = useState([]);\r\n  const [savedEvents, dispatchCalEvent] = useReducer(\r\n    savedEventsReducer,\r\n    [],\r\n    initEvents\r\n  );\r\n\r\n  const filteredEvents = useMemo(() => {\r\n    return savedEvents.filter((evt) =>\r\n      labels\r\n        .filter((lbl) => lbl.checked)\r\n        .map((lbl) => lbl.label)\r\n        .includes(evt.label)\r\n    );\r\n  }, [savedEvents, labels]);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"savedEvents\", JSON.stringify(savedEvents));\r\n  }, [savedEvents]);\r\n\r\n  useEffect(() => {\r\n    setLabels((prevLabels) => {\r\n      return [...new Set(savedEvents.map((evt) => evt.label))].map(\r\n        (label) => {\r\n          const currentLabel = prevLabels.find(\r\n            (lbl) => lbl.label === label\r\n          );\r\n          return {\r\n            label,\r\n            checked: currentLabel ? currentLabel.checked : true,\r\n          };\r\n        }\r\n      );\r\n    });\r\n  }, [savedEvents]);\r\n\r\n  useEffect(() => {\r\n    if (smallCalendarMonth !== null) {\r\n      setMonthIndex(smallCalendarMonth);\r\n    }\r\n  }, [smallCalendarMonth]);\r\n\r\n  useEffect(() => {\r\n    if (!showEventModal) {\r\n      setSelectedEvent(null);\r\n    }\r\n  }, [showEventModal]);\r\n\r\n  function updateLabel(label) {\r\n    setLabels(\r\n      labels.map((lbl) => (lbl.label === label.label ? label : lbl))\r\n    );\r\n  }\r\n\r\n  return (\r\n    <GlobalContext.Provider\r\n      value={{\r\n        monthIndex,\r\n        setMonthIndex,\r\n        smallCalendarMonth,\r\n        setSmallCalendarMonth,\r\n        daySelected,\r\n        setDaySelected,\r\n        showEventModal,\r\n        setShowEventModal,\r\n        dispatchCalEvent,\r\n        selectedEvent,\r\n        setSelectedEvent,\r\n        savedEvents,\r\n        setLabels,\r\n        labels,\r\n        updateLabel,\r\n        filteredEvents,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </GlobalContext.Provider>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}