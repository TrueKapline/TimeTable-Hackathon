{"ast":null,"code":"const DAYS_IN_WEEK = 7;\nconst DAYS_IN_MONTH = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\nconst Month = {\n  January: 0,\n  February: 0,\n  March: 0,\n  April: 0,\n  May: 0,\n  June: 0,\n  July: 0,\n  August: 0,\n  September: 0,\n  October: 0,\n  November: 0,\n  December: 0\n};\nexport function areEqual(a, b) {\n  if (!a || !b) return false;\n  return a.getFullYear() === b.getFullYear() && a.getMonth() === b.getMonth() && a.getDate() === b.getDate();\n}\nexport function isLeapYear(year) {\n  return !(year % 4 || !(year % 100) & year % 400);\n}\nexport function getDaysInMonth(date) {\n  const month = date.getMonth();\n  const year = date.getFullYear();\n  const daysInMonth = DAYS_IN_MONTH[month];\n\n  if (isLeapYear(year) && month === Month.February) {\n    return daysInMonth + 1;\n  } else {\n    return daysInMonth;\n  }\n}\nexport function getMonthData(year, month) {\n  const result = [];\n  const date = new Date(year, month);\n  let day = 1;\n  const daysInMonth = getDaysInMonth(date); //Дней в году\n\n  const monthStartsOn = getDayOfWeek(date); //День недели исходя из даты\n\n  for (let i = 0; i < (daysInMonth + monthStartsOn) / DAYS_IN_WEEK; i++) {\n    //Сколько в месяце будет недель\n    result[i] = [];\n\n    for (let j = 0; j < DAYS_IN_WEEK; j++) {\n      if (i === 0 && j < monthStartsOn || day > daysInMonth) {\n        result[i][j] = undefined;\n      } else {\n        result[i][j] = new Date(year, month, day++);\n      }\n    }\n  }\n\n  return result;\n}","map":{"version":3,"names":["DAYS_IN_WEEK","DAYS_IN_MONTH","Month","January","February","March","April","May","June","July","August","September","October","November","December","areEqual","a","b","getFullYear","getMonth","getDate","isLeapYear","year","getDaysInMonth","date","month","daysInMonth","getMonthData","result","Date","day","monthStartsOn","getDayOfWeek","i","j","undefined"],"sources":["C:/My Web Sites/hackathon/schedule/src/components/Calendar/calendar.js"],"sourcesContent":["const DAYS_IN_WEEK = 7;\r\nconst DAYS_IN_MONTH = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\r\nconst Month = {\r\n    January: 0,\r\n    February: 0,\r\n    March: 0,\r\n    April: 0,\r\n    May: 0,\r\n    June: 0,\r\n    July: 0,\r\n    August: 0,\r\n    September: 0,\r\n    October: 0,\r\n    November: 0,\r\n    December: 0\r\n};\r\n\r\nexport function areEqual(a, b) {\r\n    if(!a || !b) return false;\r\n\r\n    return (\r\n        a.getFullYear() === b.getFullYear() && \r\n        a.getMonth() === b.getMonth() &&\r\n        a.getDate() === b.getDate()\r\n    );\r\n}\r\n\r\nexport function isLeapYear(year) {\r\n    return !((year % 4) || (!(year % 100) & (year % 400)));\r\n}\r\n\r\nexport function getDaysInMonth(date) { \r\n    const month = date.getMonth();\r\n    const year = date.getFullYear();\r\n    const daysInMonth = DAYS_IN_MONTH[month];\r\n    \r\n    if(isLeapYear(year) && month === Month.February) {\r\n        return daysInMonth + 1;\r\n    } else {\r\n        return daysInMonth;\r\n    }\r\n}\r\n\r\n\r\n\r\nexport function getMonthData(year, month) {\r\n    const result = [];\r\n    const date = new Date(year, month);\r\n    let day = 1;\r\n    const daysInMonth = getDaysInMonth(date); //Дней в году\r\n    const monthStartsOn = getDayOfWeek(date); //День недели исходя из даты\r\n\r\n    for (let i = 0; i < (daysInMonth + monthStartsOn) / DAYS_IN_WEEK; i++) { //Сколько в месяце будет недель\r\n        result[i] = [];\r\n\r\n        for (let j = 0; j < DAYS_IN_WEEK; j++) {\r\n            if((i === 0 && j < monthStartsOn) || day > daysInMonth) {\r\n                result[i][j] = undefined;\r\n            } else {\r\n                result[i][j] = new Date(year, month, day++);\r\n            }\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\n\r\n\r\n\r\n"],"mappings":"AAAA,MAAMA,YAAY,GAAG,CAArB;AACA,MAAMC,aAAa,GAAG,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,EAAqB,EAArB,EAAyB,EAAzB,EAA6B,EAA7B,EAAiC,EAAjC,EAAqC,EAArC,EAAyC,EAAzC,EAA6C,EAA7C,CAAtB;AACA,MAAMC,KAAK,GAAG;EACVC,OAAO,EAAE,CADC;EAEVC,QAAQ,EAAE,CAFA;EAGVC,KAAK,EAAE,CAHG;EAIVC,KAAK,EAAE,CAJG;EAKVC,GAAG,EAAE,CALK;EAMVC,IAAI,EAAE,CANI;EAOVC,IAAI,EAAE,CAPI;EAQVC,MAAM,EAAE,CARE;EASVC,SAAS,EAAE,CATD;EAUVC,OAAO,EAAE,CAVC;EAWVC,QAAQ,EAAE,CAXA;EAYVC,QAAQ,EAAE;AAZA,CAAd;AAeA,OAAO,SAASC,QAAT,CAAkBC,CAAlB,EAAqBC,CAArB,EAAwB;EAC3B,IAAG,CAACD,CAAD,IAAM,CAACC,CAAV,EAAa,OAAO,KAAP;EAEb,OACID,CAAC,CAACE,WAAF,OAAoBD,CAAC,CAACC,WAAF,EAApB,IACAF,CAAC,CAACG,QAAF,OAAiBF,CAAC,CAACE,QAAF,EADjB,IAEAH,CAAC,CAACI,OAAF,OAAgBH,CAAC,CAACG,OAAF,EAHpB;AAKH;AAED,OAAO,SAASC,UAAT,CAAoBC,IAApB,EAA0B;EAC7B,OAAO,EAAGA,IAAI,GAAG,CAAR,IAAe,EAAEA,IAAI,GAAG,GAAT,IAAiBA,IAAI,GAAG,GAAzC,CAAP;AACH;AAED,OAAO,SAASC,cAAT,CAAwBC,IAAxB,EAA8B;EACjC,MAAMC,KAAK,GAAGD,IAAI,CAACL,QAAL,EAAd;EACA,MAAMG,IAAI,GAAGE,IAAI,CAACN,WAAL,EAAb;EACA,MAAMQ,WAAW,GAAGzB,aAAa,CAACwB,KAAD,CAAjC;;EAEA,IAAGJ,UAAU,CAACC,IAAD,CAAV,IAAoBG,KAAK,KAAKvB,KAAK,CAACE,QAAvC,EAAiD;IAC7C,OAAOsB,WAAW,GAAG,CAArB;EACH,CAFD,MAEO;IACH,OAAOA,WAAP;EACH;AACJ;AAID,OAAO,SAASC,YAAT,CAAsBL,IAAtB,EAA4BG,KAA5B,EAAmC;EACtC,MAAMG,MAAM,GAAG,EAAf;EACA,MAAMJ,IAAI,GAAG,IAAIK,IAAJ,CAASP,IAAT,EAAeG,KAAf,CAAb;EACA,IAAIK,GAAG,GAAG,CAAV;EACA,MAAMJ,WAAW,GAAGH,cAAc,CAACC,IAAD,CAAlC,CAJsC,CAII;;EAC1C,MAAMO,aAAa,GAAGC,YAAY,CAACR,IAAD,CAAlC,CALsC,CAKI;;EAE1C,KAAK,IAAIS,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAACP,WAAW,GAAGK,aAAf,IAAgC/B,YAApD,EAAkEiC,CAAC,EAAnE,EAAuE;IAAE;IACrEL,MAAM,CAACK,CAAD,CAAN,GAAY,EAAZ;;IAEA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGlC,YAApB,EAAkCkC,CAAC,EAAnC,EAAuC;MACnC,IAAID,CAAC,KAAK,CAAN,IAAWC,CAAC,GAAGH,aAAhB,IAAkCD,GAAG,GAAGJ,WAA3C,EAAwD;QACpDE,MAAM,CAACK,CAAD,CAAN,CAAUC,CAAV,IAAeC,SAAf;MACH,CAFD,MAEO;QACHP,MAAM,CAACK,CAAD,CAAN,CAAUC,CAAV,IAAe,IAAIL,IAAJ,CAASP,IAAT,EAAeG,KAAf,EAAsBK,GAAG,EAAzB,CAAf;MACH;IACJ;EACJ;;EAED,OAAOF,MAAP;AACH"},"metadata":{},"sourceType":"module"}